apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: "jarvis-slack-api-token"

spec:
  externalSecretName: "jarvis-slack-api-token"

  namespaceSelector:
    matchLabels: 
      external-secrets-target: slack

  refreshTime: "10m"

  externalSecretSpec:
    
    refreshInterval: "10m"

    secretStoreRef:
      name: "aws-{{ .Values.aws_region }}-parameter-store"
      kind: ClusterSecretStore

    target:
      # Name of kubernetes secret
      name: jarvis-slack-api-token

      creationPolicy: "Owner"
      deletionPolicy: "Delete"

    data:
        # Key in kubernetes secret
      - secretKey: secret
        remoteRef:
          # Name of paramater store paramater
          key: jarvis-slack-api-token

          # key of value to get
          property: secret

          conversionStrategy: Default
          decodingStrategy: None
          metadataPolicy: None

---

apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: "jarvis-slack-signing-secret"

spec:
  externalSecretName: "jarvis-slack-signing-secret"

  namespaceSelector:
    matchLabels: 
      external-secrets-target: slack

  refreshTime: "10m"

  externalSecretSpec:

    refreshInterval: "10m"

    secretStoreRef:
      name: "aws-{{ .Values.aws_region }}-parameter-store"
      kind: ClusterSecretStore

    target:
      # Name of kubernetes secret
      name: jarvis-slack-signing-secret

      creationPolicy: "Owner"
      deletionPolicy: "Delete"

    data:
        # Key in kubernetes secret
      - secretKey: secret
        remoteRef:
          # Name of paramater store paramater
          key: jarvis-slack-signing-secret

          # key of value to get
          property: secret

          conversionStrategy: Default
          decodingStrategy: None
          metadataPolicy: None

---

apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: "jarvis-chatgpt-api-token"

spec:
  externalSecretName: "jarvis-chatgpt-api-token"

  namespaceSelector:
    matchLabels: 
      external-secrets-target: jarvis

  refreshTime: "10m"

  externalSecretSpec:

    refreshInterval: "10m"

    secretStoreRef:
      name: "aws-{{ .Values.aws_region }}-parameter-store"
      kind: ClusterSecretStore

    target:
      # Name of kubernetes secret
      name: jarvis-chatgpt-api-token

      creationPolicy: "Owner"
      deletionPolicy: "Delete"

    data:
        # Key in kubernetes secret
      - secretKey: secret
        remoteRef:
          # Name of paramater store paramater
          key: jarvis-chatgpt-api-token

          # key of value to get
          property: secret

          conversionStrategy: Default
          decodingStrategy: None
          metadataPolicy: None

---

apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: "dev-project-registry"

spec:
  externalSecretName: "dev-project-registry"

  namespaceSelector:
    matchExpressions:
    - { key: external-secrets-target, operator: In, values: [slack, jarvis, aws] }

  refreshTime: "10m"

  externalSecretSpec:
    
    refreshInterval: "10m"

    secretStoreRef:
      name: "aws-{{ .Values.aws_region }}-parameter-store"
      kind: ClusterSecretStore

    target:
      # Name of kubernetes secret
      name: dev-project-registry

      creationPolicy: "Owner"
      deletionPolicy: "Delete"

      template:
        type: kubernetes.io/dockerconfigjson
        data:
          .dockerconfigjson: "{{ `{{ .secret }}` }}"

    data:
        # Key in kubernetes secret
      - secretKey: secret
        remoteRef:
          # Name of paramater store paramater
          key: dev-project-registry

          conversionStrategy: Default
          decodingStrategy: None
          metadataPolicy: None
